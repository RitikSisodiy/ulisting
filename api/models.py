from django.db import models
from django.utils import translation
from django.utils import timezone
# Create your models here.
class Country(models.Model):
    name = models.CharField(max_length=100)
    numeric_code = models.CharField(max_length=100)
    iso3 = models.CharField(max_length=10)
    iso2 = models.CharField(max_length=10)
    phonecode = models.CharField(max_length=100)
    capital = models.CharField(max_length=100)
    currency = models.CharField(max_length=100)
    currency_symbol = models.CharField(max_length=100)
    tld = models.CharField(max_length=100)
    native = models.CharField(max_length=100)
    region = models.CharField(max_length=100)
    subregion = models.CharField(max_length=100)
    timezones = models.CharField(max_length=100)
    translations = models.TextField()
    latitude = models.DecimalField(max_digits=10,decimal_places=8)
    longitude = models.DecimalField(max_digits=11,decimal_places=8)
    emoji = models.CharField(max_length=100)
    emojiU = models.CharField(max_length=100)
    created_at = models.DateTimeField(auto_now=True)
    updated_at = models.DateTimeField(blank=True)
    flag = models.SmallIntegerField()
    wikiDataId = models.CharField(max_length=100,blank=True,null=False)
    def save(self, *args, **kwargs):
        self.updated_at = timezone.now()
        super(Country, self).save(*args, **kwargs)
class state(models.Model):
    name = models.CharField(max_length=100)
    country = models.ForeignKey(Country,on_delete=models.CASCADE,related_name="state")
    country_code = models.CharField(max_length=2)
    fips_code = models.CharField(max_length=100,blank=True)
    iso2 = models.CharField(max_length=2,blank=True)
    type = models.CharField(max_length=100,blank=True)
    latitude = models.DecimalField(max_digits=10,decimal_places=8)
    longitude = models.DecimalField(max_digits=11,decimal_places=8)
    created_at = models.DateTimeField(auto_now=True)
    updated_at = models.DateTimeField(blank=True)
    flag = models.SmallIntegerField()
    wikiDataId = models.CharField(max_length=100,blank=True)
    def save(self, *args, **kwargs):
        self.updated_at = timezone.now()
        super(Country, self).save(*args, **kwargs)
class city(models.Model):
    name = models.CharField(max_length=100)
    state = models.ForeignKey(state,on_delete=models.CASCADE,related_name="state")
    state_code = models.CharField(max_length=200)
    country  = models.ForeignKey(Country,on_delete=models.CASCADE,related_name="city")
    country_code = models.CharField(max_length=2,blank=True)
    latitude = models.DecimalField(max_digits=10,decimal_places=8)
    longitude = models.DecimalField(max_digits=11,decimal_places=8)
    created_at = models.DateTimeField(auto_now=True)
    updated_at = models.DateTimeField(blank=True)
    flag = models.SmallIntegerField()
    wikiDataId = models.CharField(max_length=100,blank=True)
    def save(self, *args, **kwargs):
        self.updated_at = timezone.now()
        super(Country, self).save(*args, **kwargs)
class cityLocations(models.Model):
    city = models.ForeignKey(city,on_delete=models.CASCADE)
    location = models.CharField(max_length=200)
    pincode = models.IntegerField(blank=True,null=True)
    communitiny = models.CharField(max_length=100,blank=True)
    latitude = models.DecimalField(max_digits=10,decimal_places=8,blank=True)
    longitude = models.DecimalField(max_digits=11,decimal_places=8,blank=True)